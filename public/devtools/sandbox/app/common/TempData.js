Ext.define('Spyglass.common.TempData', {
  singleton: true,
  alternateClassName: 'tempData',

  data: [
    {
      name: 'tree',
      className: 'Ext.grid.Tree',
      isExtComponent: false,
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [],
      lastSize: {},
      onInitializedListeners: [],
      initialConfig: {
        xtype: 'tree',
        reference: 'rfTodoList',
        scrollable: true,
        rootVisible: false,
        hideHeaders: true,
        selectable: {
          mode: 'single',
        },
        height: '100%',
        emptyText: 'There are no Todo available.',
        columns: [
          {
            xtype: 'treecolumn',
            text: 'Todos',
            width: '100%',
            dataIndex: 'Title',
            $initParent: {
              xtype: 'headercontainer',
              sortable: true,
              grid: '[[ Object ]]',
            },
          },
        ],
        store: {
          type: 'todoTreeListStore',
        },
        listeners: {
          select: 'todoTreeListSelect',
          checkchange: 'listItemsCheckChange',
          beforenodeexpand: 'onBeforeExpand',
        },
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
      },
      $iid: 17,
      baseCls: 'x-tree',
      autoGenId: true,
      id: 'ext-tree-1',
      getId: 'ext-tree-1',
      referenceList: [
        'element',
        'bodyElement',
        'outerCt',
        'innerCt',
        'resizeMarkerElement',
      ],
      $observableInitialized: true,
      hasListeners: {
        select: 1,
        checkchange: 1,
        beforenodeexpand: 1,
        columnschanged: 1,
        columnmove: 1,
        childtap: 1,
        tap: 1,
        itemcontextmenu: 1,
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        addtodo: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {
        refresh: 'beforerefresh',
        horizontaloverflowchange: 'beforehorizontaloverflowchange',
      },
      events: {},
      isFirstInstance: true,
      getPinnedHeader: '[[ Function ]]',
      getTwoWayBindable: '[[ Function ]]',
      tabIndex: 0,
      focusable: true,
      config: {
        root: {},
        columnMenu: {
          items: {
            sortAsc: {
              xtype: 'gridsortascmenuitem',
              group: 'sortDir',
              weight: -100,
            },
            sortDesc: {
              xtype: 'gridsortdescmenuitem',
              group: 'sortDir',
              weight: -90,
            },
            groupByThis: {
              xtype: 'gridgroupbythismenuitem',
              handler: 'column.onGroupByThis',
              separator: true,
              weight: -50,
            },
            showInGroups: {
              xtype: 'gridshowingroupsmenuitem',
              handler: 'column.onToggleShowInGroups',
              weight: -40,
            },
          },
          xtype: 'menu',
          weighted: true,
          align: 'tl-bl?',
          hideOnParentHide: false,
        },
        headerContainer: {
          xtype: 'headercontainer',
        },
        titleBar: {
          xtype: 'titlebar',
          docked: 'top',
        },
        columnsMenuItem: {
          xtype: 'gridcolumnsmenu',
          weight: -80,
          separator: true,
        },
        storeEventListeners: {
          add: 'onStoreAdd',
          beforeload: 'onStoreBeforeLoad',
          clear: 'onStoreClear',
          load: 'onStoreLoad',
          refresh: 'onStoreRefresh',
          remove: 'onStoreRemove',
          update: 'onStoreUpdate',
          groupchange: 'onStoreGroupChange',
          totalcountchange: 'onStoreTotalCountChange',
          sort: 'onStoreSort',
        },
        itemConfig: {
          xtype: 'gridrow',
        },
        groupHeader: {
          xtype: 'rowheader',
          tpl: '{html} ({count})',
        },
        pinnedHeader: {
          xtype: 'rowheader',
        },
        collapseDefaults: {
          xclass: 'Ext.dataview.ListCollapser',
        },
        groupPlaceholder: {
          xtype: 'listitemplaceholder',
        },
        emptyTextDefaults: {
          xtype: 'emptytext',
        },
        publishes: {
          selection: 1,
        },
        twoWayBindable: {
          selection: 1,
        },
        itemRipple: {
          release: true,
          color: 'default',
        },
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        xtype: 'tree',
        reference: 'rfTodoList',
        scrollable: true,
        rootVisible: false,
        hideHeaders: true,
        selectable: {
          mode: 'single',
        },
        height: '100%',
        emptyText: 'There are no Todo available.',
        columns: [
          {
            xtype: 'treecolumn',
            text: 'Todos',
            width: '100%',
            dataIndex: 'Title',
            $initParent: {
              xtype: 'headercontainer',
              sortable: true,
              grid: '[[ Object ]]',
            },
          },
        ],
        store: {
          type: 'todoTreeListStore',
        },
        listeners: {
          select: 'todoTreeListSelect',
          checkchange: 'listItemsCheckChange',
          beforenodeexpand: 'onBeforeExpand',
        },
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
        selectOnExpander: false,
        singleExpand: false,
        displayField: 'text',
        rowLines: false,
        folderSort: false,
        expanderFirst: true,
        expanderOnly: true,
        columnResize: true,
        enableColumnMove: true,
        hideScrollbar: null,
        itemsFocusable: false,
        title: '',
        sortable: true,
        multiColumnSort: false,
        columnLines: null,
        rowNumbers: null,
        infinite: true,
        navigationModel: 'grid',
        scrollToTopOnRefresh: false,
        striped: false,
        bufferSize: 20,
        collapsible: true,
        disclosureProperty: 'disclosure',
        grouped: true,
        groupFooter: null,
        indexBar: null,
        minimumBufferDistance: 5,
        onItemDisclosure: null,
        pinFooters: false,
        pinHeaders: true,
        pinnedFooter: null,
        preventSelectionOnDisclose: true,
        preventSelectionOnTool: true,
        useSimpleItems: null,
        variableHeights: null,
        grouping: null,
        horizontalOverflow: null,
        innerCtHeight: null,
        innerWidth: null,
        pinnedFooterHeight: null,
        pinnedHeaderHeight: null,
        topRenderedIndex: null,
        verticalOverflow: null,
        visibleHeight: null,
        visibleLeft: null,
        visibleTop: null,
        visibleWidth: null,
        itemInnerCls: null,
        itemContentCls: null,
        itemDataMap: null,
        maxItemCache: 20,
        itemCount: 0,
        itemButtonMode: false,
        data: null,
        emptyState: null,
        enableTextSelection: null,
        inline: null,
        itemCls: null,
        loadingHeight: null,
        markDirty: null,
        associatedData: null,
        deferEmptyText: true,
        deselectOnContainerClick: true,
        disableSelection: false,
        emptyItemText: 'Â ',
        itemTpl: '<div>{text:htmlEncode}</div>',
        loadingText: 'Loading...',
        pressedDelay: 100,
        triggerEvent: 'childtap',
        triggerCtEvent: 'tap',
        autoSize: null,
        tabIndex: 0,
        activeItemIndex: null,
        bodyCls: null,
        layout: 'auto',
        control: null,
        defaults: null,
        items: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minWidth: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        docked: null,
        centered: null,
        padding: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        width: null,
        hidden: null,
        disabled: null,
        cls: null,
        margin: null,
        style: null,
        border: null,
        touchAction: null,
        bind: null,
        controller: null,
        defaultListenerScope: false,
        session: null,
        viewModel: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        flex: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      xtype: 'tree',
      reference: 'rfTodoList',
      listeners: null,
      ownerGrid: {
        xtype: 'tree',
        reference: 'rfTodoList',
        scrollable: true,
        rootVisible: false,
        hideHeaders: true,
        selectable: {
          mode: 'single',
        },
        height: '100%',
        emptyText: 'There are no Todo available.',
        columns: [
          {
            xtype: 'treecolumn',
            text: 'Todos',
            width: '100%',
            dataIndex: 'Title',
            $initParent: '[[ Object ]]',
          },
        ],
        store: {
          type: 'todoTreeListStore',
        },
        listeners: {
          select: 'todoTreeListSelect',
          checkchange: 'listItemsCheckChange',
          beforenodeexpand: 'onBeforeExpand',
        },
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
      },
      _infinite: true,
      infinite: true,
      setItemHidden: '[[ Function ]]',
      renderInfo: {
        atBegin: true,
        atEnd: true,
        bottom: 0,
        height: 0,
        top: 0,
        indexBottom: 0,
        indexTop: 0,
      },
      _scrollable: {
        type: 'virtual',
        component: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        x: true,
        y: true,
      },
      managedListeners: [
        {
          item: {
            type: 'virtual',
            component: '[[ Object ]]',
            x: true,
            y: true,
          },
          ename: 'offsetychange',
          fn: 'onOffsetChange',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            offsetychange: 'onOffsetChange',
            offsetxchange: 'onOffsetChange',
            scroll: 'onContainerScroll',
            scrollstart: 'onContainerScrollStart',
            scrollend: 'onContainerScrollEnd',
          },
        },
        {
          item: {
            type: 'virtual',
            component: '[[ Object ]]',
            x: true,
            y: true,
          },
          ename: 'offsetxchange',
          fn: 'onOffsetChange',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            offsetychange: 'onOffsetChange',
            offsetxchange: 'onOffsetChange',
            scroll: 'onContainerScroll',
            scrollstart: 'onContainerScrollStart',
            scrollend: 'onContainerScrollEnd',
          },
        },
        {
          item: {
            type: 'virtual',
            component: '[[ Object ]]',
            x: true,
            y: true,
          },
          ename: 'scroll',
          fn: 'onContainerScroll',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            offsetychange: 'onOffsetChange',
            offsetxchange: 'onOffsetChange',
            scroll: 'onContainerScroll',
            scrollstart: 'onContainerScrollStart',
            scrollend: 'onContainerScrollEnd',
          },
        },
        {
          item: {
            type: 'virtual',
            component: '[[ Object ]]',
            x: true,
            y: true,
          },
          ename: 'scrollstart',
          fn: 'onContainerScrollStart',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            offsetychange: 'onOffsetChange',
            offsetxchange: 'onOffsetChange',
            scroll: 'onContainerScroll',
            scrollstart: 'onContainerScrollStart',
            scrollend: 'onContainerScrollEnd',
          },
        },
        {
          item: {
            type: 'virtual',
            component: '[[ Object ]]',
            x: true,
            y: true,
          },
          ename: 'scrollend',
          fn: 'onContainerScrollEnd',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            offsetychange: 'onOffsetChange',
            offsetxchange: 'onOffsetChange',
            scroll: 'onContainerScroll',
            scrollstart: 'onContainerScrollStart',
            scrollend: 'onContainerScrollEnd',
          },
        },
        {
          ename: 'resize',
          fn: 'onBodyResize',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            resize: 'onBodyResize',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'add',
          fn: 'onStoreAdd',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'beforeload',
          fn: 'onStoreBeforeLoad',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'clear',
          fn: 'onStoreClear',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'load',
          fn: 'onStoreLoad',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'refresh',
          fn: 'onStoreRefresh',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'remove',
          fn: 'onStoreRemove',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'update',
          fn: 'onStoreUpdate',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'groupchange',
          fn: 'onStoreGroupChange',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'totalcountchange',
          fn: 'onStoreTotalCountChange',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'sort',
          fn: 'onStoreSort',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
            destroyable: true,
            add: 'onStoreAdd',
            beforeload: 'onStoreBeforeLoad',
            clear: 'onStoreClear',
            load: 'onStoreLoad',
            refresh: 'onStoreRefresh',
            remove: 'onStoreRemove',
            update: 'onStoreUpdate',
            groupchange: 'onStoreGroupChange',
            totalcountchange: 'onStoreTotalCountChange',
            sort: 'onStoreSort',
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'rootchange',
          fn: '[[ Function ]]',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            destroyable: true,
            rootchange: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'beforeload',
          fn: '[[ Function ]]',
          scope: null,
        },
        {
          item: {
            type: 'todoTreeListStore',
          },
          ename: 'load',
          fn: '[[ Function ]]',
          scope: null,
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnresize',
          fn: 'onColumnResize',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnshow',
          fn: 'onColumnShow',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnhide',
          fn: 'onColumnHide',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnadd',
          fn: 'onColumnAdd',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnmove',
          fn: 'onColumnMove',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnremove',
          fn: 'onColumnRemove',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          item: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
          ename: 'columnsort',
          fn: 'onColumnSort',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            columnresize: 'onColumnResize',
            columnshow: 'onColumnShow',
            columnhide: 'onColumnHide',
            columnadd: 'onColumnAdd',
            columnmove: 'onColumnMove',
            columnremove: 'onColumnRemove',
            columnsort: 'onColumnSort',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointerdown',
          fn: '_onChildTouchStart',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointerup',
          fn: '_onChildTouchEnd',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointercancel',
          fn: '_onChildTouchCancel',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'tap',
          fn: '_onChildTap',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'tapcancel',
          fn: '_onChildTapCancel',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'longpress',
          fn: '_onChildLongPress',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'taphold',
          fn: '_onChildTapHold',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'singletap',
          fn: '_onChildSingleTap',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'doubletap',
          fn: '_onChildDoubleTap',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'swipe',
          fn: '_onChildSwipe',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointerover',
          fn: '_onChildMouseOver',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointerout',
          fn: '_onChildMouseOut',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'contextmenu',
          fn: '_onChildContextMenu',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {
            touchstart: '_onChildTouchStart',
            touchend: '_onChildTouchEnd',
            touchcancel: '_onChildTouchCancel',
            tap: '_onChildTap',
            tapcancel: '_onChildTapCancel',
            longpress: '_onChildLongPress',
            taphold: '_onChildTapHold',
            singletap: '_onChildSingleTap',
            doubletap: '_onChildDoubleTap',
            swipe: '_onChildSwipe',
            mouseover: '_onChildMouseOver',
            mouseout: '_onChildMouseOut',
            contextmenu: '_onChildContextMenu',
            delegate: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        },
        {
          ename: 'pointerdown',
          fn: '_onContainerTouchStart',
          scope: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: ['[[ Object ]]'],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: '[[ Object ]]',
          },
          options: {},
        },
      ],
      expandoKey: 'list-17',
      gapMap: {},
      itemTranslationMethod: 'csstransform',
      groupingInfo: {
        header: {
          config: {
            xtype: 'rowheader',
            tpl: {},
          },
          creator: 'createGroupHeader',
          name: '$header',
          offset: 0,
          max: 20,
          unused: [],
          indices: null,
          map: null,
        },
        footer: {
          config: null,
          creator: 'createGroupFooter',
          name: '$footer',
          offset: 1,
          max: 20,
          unused: [],
          indices: null,
          map: null,
        },
        placeholder: {
          max: 20,
          unused: [],
        },
      },
      selfPartner: [
        {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: [
            {
              xtype: 'treecolumn',
              text: 'Todos',
              width: '100%',
              dataIndex: 'Title',
              $initParent: '[[ Object ]]',
            },
          ],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
        },
      ],
      stickyItems: [],
      stickyItemsByRecordId: {},
      itemCache: {
        max: 20,
        unused: [],
      },
      dataItems: [],
      _rootVisible: false,
      _hideHeaders: true,
      _trueStore: {
        type: 'todoTreeListStore',
      },
      store: {
        type: 'todoTreeListStore',
      },
      _grouped: true,
      _grouping: false,
      _store: {
        type: 'todoTreeListStore',
      },
      storeListeners: {
        observable: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: [
            {
              xtype: 'treecolumn',
              text: 'Todos',
              width: '100%',
              dataIndex: 'Title',
              $initParent: '[[ Object ]]',
            },
          ],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
        },
        managedListeners: true,
        args: [
          {
            type: 'todoTreeListStore',
          },
          {
            destroyable: true,
            rootchange: '[[ Function ]]',
            scope: {
              xtype: 'tree',
              reference: 'rfTodoList',
              scrollable: true,
              rootVisible: false,
              hideHeaders: true,
              selectable: '[[ Object ]]',
              height: '100%',
              emptyText: 'There are no Todo available.',
              columns: '[[ Array ]]',
              store: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        ],
      },
      hasLoadedStore: true,
      tombstoneRec: {
        id: 'myApp.model.TodoTreeListModel-1',
        parentId: null,
        index: -1,
        depth: 0,
        expanded: false,
        expandable: true,
        cls: '',
        icon: '',
        glyph: '',
        root: false,
        isLast: false,
        isFirst: false,
        allowDrop: true,
        allowDrag: true,
        loaded: false,
        loading: false,
        href: '',
        hrefTarget: '',
        qtip: '',
        qtitle: '',
        qshowDelay: 0,
        children: null,
        visible: true,
        text: '',
        checked: false,
        leaf: false,
        iconCls: 'x-fa fa-file-alt',
      },
      storeRelayers: {
        observable: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: [
            {
              xtype: 'treecolumn',
              text: 'Todos',
              width: '100%',
              dataIndex: 'Title',
              $initParent: '[[ Object ]]',
            },
          ],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
        },
        managedListeners: true,
        args: [
          {
            type: 'todoTreeListStore',
          },
          {
            beforeload: '[[ Function ]]',
            load: '[[ Function ]]',
          },
        ],
      },
      _publishes: {
        selection: 1,
      },
      inheritedState: {
        defaultListenerScope: {
          type: 'listController',
        },
        viewModel: {
          data: {
            isFiltered: false,
            rfTodoList: {},
            rfFilterMenu: {
              pressed: false,
            },
          },
          formulas: null,
        },
        referencePath: '',
        viewModelPath: '',
        referenceHolder: {
          type: 'listController',
        },
        controller: {
          type: 'listController',
        },
        nameHolder: {},
      },
      inheritedStateInner: {
        defaultListenerScope: {
          type: 'listController',
        },
        viewModel: {
          data: {
            isFiltered: false,
            rfTodoList: {},
            rfFilterMenu: {
              pressed: false,
            },
          },
          formulas: null,
        },
        referencePath: '',
        viewModelPath: '',
        referenceHolder: {
          type: 'listController',
        },
        controller: {
          type: 'listController',
        },
        nameHolder: {},
      },
      referenceKey: 'rfTodoList',
      viewModelKey: 'rfTodoList',
      publishedState: {},
      _selectable: {
        type: 'grid',
        view: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        mode: 'single',
      },
      _height: '100%',
      _emptyText: 'There are no Todo available.',
      _columns: [
        {
          xtype: 'treecolumn',
          text: 'Todos',
          width: '100%',
          dataIndex: 'Title',
          $initParent: {
            xtype: 'headercontainer',
            sortable: true,
            grid: '[[ Object ]]',
          },
        },
      ],
      _headerContainer: {
        xtype: 'headercontainer',
        sortable: true,
        grid: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
      },
      rowHeight: null,
      _innerWidth: 327,
      _verticalOverflow: false,
      _root: {},
      _rowLines: false,
      _columnResize: true,
      _plugins: [
        {
          type: 'columnresizing',
        },
        {
          type: 'headerreorder',
        },
      ],
      _enableColumnMove: true,
      _title: '',
      _titleBar: {},
      _itemConfig: {
        xtype: 'gridrow',
      },
      _navigationModel: {
        view: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        type: 'grid',
      },
      _striped: false,
      striped: false,
      _pinFooters: false,
      pinFooters: false,
      _pinHeaders: true,
      pinHeaders: true,
      _maxItemCache: 20,
      _itemCount: 0,
      _itemRipple: {
        release: true,
        color: 'default',
      },
      $links: {
        layout: true,
      },
      layout: {
        container: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _layout: {
        container: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _activeItem: 0,
      _activeItemIndex: -1,
      _itemId: 'ext-tree-1',
      $proxiedConfigs: null,
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      itemSelector: '[[ Function ]]',
      eventDelegate: '[[ Function ]]',
      $inheritUiCount: 3,
      initialized: true,
      $delegatedEvents: {},
      parent: {
        xtype: 'todoList',
        reference: 'rfTodoList',
        minWidth: 300,
        flex: 1,
        cls: 'todolist-resizer',
        resizable: {
          split: true,
          edges: 'east',
        },
        listeners: {
          loadDetails: 'loadTodoDetails',
          addTodo: 'onAddTodo',
        },
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
      },
      isDetached: false,
      rendered: true,
      initBindable: '[[ Function ]]',
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      $hasCachedDefaultItemClass: true,
      emptyTextCmp: {
        xtype: 'emptytext',
        html: 'There are no Todo available.',
        hidden: true,
        isEmptyText: true,
        showInEmptyState: null,
        $initParent: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
      },
      _emptyState: 'There are no Todo available.',
      refreshCounter: 1,
      resyncListener: null,
      _visibleHeight: 531,
      heightSyncs: 3,
      onRender: null,
      suspendSync: false,
      _visibleWidth: 327.75,
      _horizontalOverflow: false,
      hasFocus: false,
      focusEnterEvent: null,
      containsFocus: false,
      sharedMenuItems: [
        {
          grid: {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: '[[ Object ]]',
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: '[[ Array ]]',
            store: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
          xtype: 'gridcolumnsmenu',
          weight: -80,
          separator: true,
        },
      ],
      _columnsMenuItem: {
        grid: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
        xtype: 'gridcolumnsmenu',
        weight: -80,
        separator: true,
      },
      _collapsible: {
        xclass: 'Ext.dataview.ListCollapser',
        list: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: ['[[ Object ]]'],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: '[[ Object ]]',
        },
      },
    },
    {
      name: 'todoList',
      className: 'myApp.view.desktop.todolist.List',
      isExtComponent: false,
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [
        {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: [
            {
              xtype: 'treecolumn',
              text: 'Todos',
              width: '100%',
              dataIndex: 'Title',
              $initParent: '[[ Object ]]',
            },
          ],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
        },
      ],
      lastSize: {},
      onInitializedListeners: [],
      initialConfig: {
        xtype: 'todoList',
        reference: 'rfTodoList',
        minWidth: 300,
        flex: 1,
        cls: 'todolist-resizer',
        resizable: {
          split: true,
          edges: 'east',
        },
        listeners: {
          loadDetails: 'loadTodoDetails',
          addTodo: 'onAddTodo',
        },
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: {
            xtype: 'container',
            reference: 'rfMainView',
            defaults: '[[ Object ]]',
            flex: 1,
            $initParent: '[[ Object ]]',
          },
        },
      },
      $iid: 16,
      baseCls: 'x-panel',
      referenceHolder: true,
      autoGenId: true,
      id: 'ext-todoList-1',
      getId: 'ext-todoList-1',
      referenceList: ['element', 'bodyWrapElement', 'bodyElement'],
      $observableInitialized: true,
      hasListeners: {
        loaddetails: 1,
        addtodo: 1,
        expand: 1,
        collapse: 1,
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        tap: 2,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {},
      events: {},
      isFirstInstance: true,
      config: {
        viewModel: {
          data: {
            isFiltered: false,
          },
        },
        tbar: {
          items: [
            {
              xtype: 'button',
              iconCls: 'x-fa fa-ellipsis-v',
              arrow: false,
              menu: {
                bodyCls: 'menu-padding',
                items: '[[ Array ]]',
              },
            },
            '->',
            {
              xtype: 'button',
              iconCls: 'x-fa fa-filter',
              arrow: false,
              reference: 'rfFilterMenu',
              tooltip: 'Filter',
              menu: {
                bodyCls: 'menu-padding',
                items: '[[ Array ]]',
              },
            },
          ],
          bodyCls: 'todoList-header',
          shadow: false,
        },
        items: [
          {
            xtype: 'tree',
            reference: 'rfTodoList',
            scrollable: true,
            rootVisible: false,
            hideHeaders: true,
            selectable: {
              mode: 'single',
            },
            height: '100%',
            emptyText: 'There are no Todo available.',
            columns: [
              {
                xtype: 'treecolumn',
                text: 'Todos',
                width: '100%',
                dataIndex: 'Title',
                $initParent: '[[ Object ]]',
              },
            ],
            store: {
              type: 'todoTreeListStore',
            },
            listeners: {
              select: 'todoTreeListSelect',
              checkchange: 'listItemsCheckChange',
              beforenodeexpand: 'onBeforeExpand',
            },
            $initParent: {
              xtype: 'todoList',
              reference: 'rfTodoList',
              minWidth: 300,
              flex: 1,
              cls: 'todolist-resizer',
              resizable: '[[ Object ]]',
              listeners: '[[ Object ]]',
              $initParent: '[[ Object ]]',
            },
          },
        ],
        buttonToolbar: {
          layout: {
            type: 'box',
            vertical: false,
            pack: 'center',
          },
          xtype: 'toolbar',
          itemId: 'buttonToolbar',
          docked: 'bottom',
          defaultType: 'button',
          weighted: true,
          ui: 'footer',
          defaultButtonUI: null,
        },
        standardButtons: {
          ok: {
            text: 'OK',
            weight: 10,
          },
          abort: {
            text: 'Abort',
            weight: 20,
          },
          retry: {
            text: 'Retry',
            weight: 30,
          },
          ignore: {
            text: 'Ignore',
            weight: 40,
          },
          yes: {
            text: 'Yes',
            weight: 50,
          },
          no: {
            text: 'No',
            weight: 60,
          },
          cancel: {
            text: 'Cancel',
            weight: 70,
          },
          apply: {
            text: 'Apply',
            weight: 80,
          },
          save: {
            text: 'Save',
            weight: 90,
          },
          submit: {
            text: 'Submit',
            weight: 100,
          },
          help: {
            text: 'Help',
            weight: 110,
          },
          close: {
            text: 'Close',
            weight: 120,
          },
        },
        defaultToolWeights: {
          toggle: 10,
          gear: 20,
          prev: 30,
          next: 40,
          left: 50,
          right: 60,
          down: 70,
          up: 80,
          refresh: 90,
          disclosure: 100,
          plus: 100,
          minus: 110,
          search: 120,
          edit: 125,
          save: 130,
          print: 140,
          expand: 150,
          collapse: 160,
          help: 170,
          pin: 180,
          unpin: 190,
          minimize: 200,
          maximize: 210,
          restore: 220,
          close: 230,
          trash: 240,
        },
        toolDefaults: {
          xtype: 'tool',
          zone: 'end',
        },
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        xtype: 'todoList',
        reference: 'rfTodoList',
        minWidth: 300,
        flex: 1,
        cls: 'todolist-resizer',
        resizable: {
          split: true,
          edges: 'east',
        },
        listeners: {
          loadDetails: 'loadTodoDetails',
          addTodo: 'onAddTodo',
        },
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: {
            xtype: 'container',
            reference: 'rfMainView',
            defaults: '[[ Object ]]',
            flex: 1,
            $initParent: '[[ Object ]]',
          },
        },
        controller: 'listController',
        headerPosition: 'top',
        header: null,
        icon: null,
        iconCls: null,
        iconAlign: null,
        title: null,
        titleAlign: null,
        anchor: null,
        anchorPosition: null,
        closable: null,
        bbar: null,
        lbar: null,
        rbar: null,
        border: false,
        bodyBorder: null,
        bodyPadding: null,
        bodyStyle: null,
        closeAction: 'destroy',
        closeToolText: 'Close panel',
        buttonAlign: 'right',
        buttonDefaults: null,
        buttons: null,
        minButtonWidth: 75,
        tools: null,
        activeItemIndex: null,
        autoSize: null,
        bodyCls: null,
        layout: 'auto',
        control: null,
        defaults: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        data: null,
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        scrollable: null,
        docked: null,
        centered: null,
        padding: null,
        tabIndex: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        width: null,
        height: null,
        hidden: null,
        disabled: null,
        margin: null,
        style: null,
        touchAction: null,
        bind: null,
        defaultListenerScope: false,
        publishes: null,
        session: null,
        twoWayBindable: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      xtype: 'todoList',
      reference: 'rfTodoList',
      listeners: null,
      _minWidth: 300,
      _cls: ['todolist-resizer'],
      _resizable: {
        xclass: 'Ext.panel.Resizer',
        target: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
        ui: null,
        split: true,
        edges: 'east',
      },
      controller: {
        type: 'listController',
      },
      _controller: {
        type: 'listController',
      },
      $hasCachedDefaultItemClass: true,
      _masked: {
        xtype: 'loadmask',
        message: 'Loading ...',
      },
      inheritedState: {
        defaultListenerScope: {
          type: 'listController',
        },
        viewModel: {
          data: {
            isFiltered: false,
            rfTodoList: {},
            rfFilterMenu: {
              pressed: false,
            },
          },
          formulas: null,
        },
        referencePath: '',
        viewModelPath: '',
        referenceHolder: {
          type: 'listController',
        },
        controller: {
          type: 'listController',
        },
        nameHolder: {},
      },
      inheritedStateInner: {
        defaultListenerScope: {
          type: 'listController',
        },
        viewModel: {
          data: {
            isFiltered: false,
            rfTodoList: {},
            rfFilterMenu: {
              pressed: false,
            },
          },
          formulas: null,
        },
        referencePath: '',
        viewModelPath: '',
        referenceHolder: {
          type: 'listController',
        },
        controller: {
          type: 'listController',
        },
        nameHolder: {},
      },
      referenceKey: 'rfTodoList',
      viewModelKey: 'rfTodoList',
      _viewModel: {
        data: {
          isFiltered: false,
          rfTodoList: {},
          rfFilterMenu: {
            pressed: false,
          },
        },
        formulas: null,
      },
      hasVM: true,
      viewModel: {
        data: {
          isFiltered: false,
          rfTodoList: {},
          rfFilterMenu: {
            pressed: false,
          },
        },
        formulas: null,
      },
      $links: {
        layout: true,
      },
      layout: {
        container: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _layout: {
        container: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _activeItem: {
        xtype: 'tree',
        reference: 'rfTodoList',
        scrollable: true,
        rootVisible: false,
        hideHeaders: true,
        selectable: {
          mode: 'single',
        },
        height: '100%',
        emptyText: 'There are no Todo available.',
        columns: [
          {
            xtype: 'treecolumn',
            text: 'Todos',
            width: '100%',
            dataIndex: 'Title',
            $initParent: '[[ Object ]]',
          },
        ],
        store: {
          type: 'todoTreeListStore',
        },
        listeners: {
          select: 'todoTreeListSelect',
          checkchange: 'listItemsCheckChange',
          beforenodeexpand: 'onBeforeExpand',
        },
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
      },
      _activeItemIndex: 0,
      pendingActiveItem: {
        xtype: 'tree',
        reference: 'rfTodoList',
        scrollable: true,
        rootVisible: false,
        hideHeaders: true,
        selectable: {
          mode: 'single',
        },
        height: '100%',
        emptyText: 'There are no Todo available.',
        columns: [
          {
            xtype: 'treecolumn',
            text: 'Todos',
            width: '100%',
            dataIndex: 'Title',
            $initParent: '[[ Object ]]',
          },
        ],
        store: {
          type: 'todoTreeListStore',
        },
        listeners: {
          select: 'todoTreeListSelect',
          checkchange: 'listItemsCheckChange',
          beforenodeexpand: 'onBeforeExpand',
        },
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
      },
      _tbar: {
        items: [
          {
            xtype: 'button',
            iconCls: 'x-fa fa-ellipsis-v',
            arrow: false,
            menu: {
              bodyCls: 'menu-padding',
              items: '[[ Array ]]',
            },
            $initParent: '[[ Object ]]',
          },
          '->',
          {
            xtype: 'button',
            iconCls: 'x-fa fa-filter',
            arrow: false,
            reference: 'rfFilterMenu',
            tooltip: 'Filter',
            menu: {
              bodyCls: 'menu-padding',
              items: '[[ Array ]]',
            },
            $initParent: '[[ Object ]]',
          },
        ],
        bodyCls: 'todoList-header',
        shadow: false,
        $initParent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
        parent: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: '[[ Object ]]',
        },
        xtype: 'toolbar',
        docked: 'top',
      },
      _headerPosition: 'top',
      _standardButtons: {
        ok: {
          text: 'OK',
          weight: 10,
        },
        abort: {
          text: 'Abort',
          weight: 20,
        },
        retry: {
          text: 'Retry',
          weight: 30,
        },
        ignore: {
          text: 'Ignore',
          weight: 40,
        },
        yes: {
          text: 'Yes',
          weight: 50,
        },
        no: {
          text: 'No',
          weight: 60,
        },
        cancel: {
          text: 'Cancel',
          weight: 70,
        },
        apply: {
          text: 'Apply',
          weight: 80,
        },
        save: {
          text: 'Save',
          weight: 90,
        },
        submit: {
          text: 'Submit',
          weight: 100,
        },
        help: {
          text: 'Help',
          weight: 110,
        },
        close: {
          text: 'Close',
          weight: 120,
        },
      },
      _toolDefaults: {
        xtype: 'tool',
        zone: 'end',
      },
      _buttonAlign: 'right',
      _itemId: 'ext-todoList-1',
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      initialized: true,
      $delegatedEvents: {},
      refs: {
        rfTodoList: {
          xtype: 'tree',
          reference: 'rfTodoList',
          scrollable: true,
          rootVisible: false,
          hideHeaders: true,
          selectable: {
            mode: 'single',
          },
          height: '100%',
          emptyText: 'There are no Todo available.',
          columns: [
            {
              xtype: 'treecolumn',
              text: 'Todos',
              width: '100%',
              dataIndex: 'Title',
              $initParent: '[[ Object ]]',
            },
          ],
          store: {
            type: 'todoTreeListStore',
          },
          listeners: {
            select: 'todoTreeListSelect',
            checkchange: 'listItemsCheckChange',
            beforenodeexpand: 'onBeforeExpand',
          },
          $initParent: {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: '[[ Object ]]',
            listeners: '[[ Object ]]',
            $initParent: '[[ Object ]]',
          },
        },
        rfFilterMenu: {
          xtype: 'button',
          iconCls: 'x-fa fa-filter',
          arrow: false,
          reference: 'rfFilterMenu',
          tooltip: 'Filter',
          menu: {
            bodyCls: 'menu-padding',
            items: ['[[ Object ]]', '[[ Object ]]', '[[ Object ]]'],
          },
          $initParent: {
            items: '[[ Array ]]',
            bodyCls: 'todoList-header',
            shadow: false,
            $initParent: '[[ Object ]]',
            parent: '[[ Object ]]',
            xtype: 'toolbar',
            docked: 'top',
          },
        },
      },
      nameRefs: null,
      parent: {
        fullscreen: true,
        xtype: 'todo',
        $initParent: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: '[[ Object ]]',
        },
      },
      isDetached: false,
      rendered: true,
      initBindable: '[[ Function ]]',
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      onRender: null,
      focusEnterEvent: null,
      containsFocus: false,
      filePath:
        '<a target="_blank" href="http://localhost/todoApp/app/view/desktop/todolist/List.js"></a>',
    },
    {
      name: 'todo',
      className: 'myApp.view.desktop.todo.Todo',
      isExtComponent: false,
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [
        {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
        {
          xtype: 'todoDetail',
          reference: 'rfTodoDetails',
          columnResize: false,
          flex: 3,
          listeners: {
            operationPerformed: 'onOperationPerformed',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
      ],
      lastSize: {},
      onInitializedListeners: [],
      initialConfig: {
        fullscreen: true,
        xtype: 'todo',
        $initParent: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
      },
      $iid: 13,
      baseCls: 'x-panel',
      referenceHolder: true,
      autoGenId: true,
      id: 'ext-todo-1',
      getId: 'ext-todo-1',
      referenceList: ['element', 'bodyWrapElement', 'bodyElement'],
      $observableInitialized: true,
      hasListeners: {
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        addtodo: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        tap: 2,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {
        topchange: 'beforetopchange',
        rightchange: 'beforerightchange',
        bottomchange: 'beforebottomchange',
        leftchange: 'beforeleftchange',
      },
      events: {},
      isFirstInstance: true,
      config: {
        header: {
          cls: 'todoHeader',
          title: 'Todos',
        },
        tools: [
          {
            xtype: 'button',
            iconCls: 'userIcon',
            tooltip: 'account',
            anchor: true,
            hidden: true,
            menu: {
              items: ['[[ Object ]]', '[[ Object ]]'],
            },
          },
        ],
        items: [
          {
            xtype: 'todoList',
            reference: 'rfTodoList',
            minWidth: 300,
            flex: 1,
            cls: 'todolist-resizer',
            resizable: {
              split: true,
              edges: 'east',
            },
            listeners: {
              loadDetails: 'loadTodoDetails',
              addTodo: 'onAddTodo',
            },
            $initParent: {
              fullscreen: true,
              xtype: 'todo',
              $initParent: '[[ Object ]]',
            },
          },
          {
            xtype: 'todoDetail',
            reference: 'rfTodoDetails',
            columnResize: false,
            flex: 3,
            listeners: {
              operationPerformed: 'onOperationPerformed',
            },
            $initParent: {
              fullscreen: true,
              xtype: 'todo',
              $initParent: '[[ Object ]]',
            },
          },
        ],
        buttonToolbar: {
          layout: {
            type: 'box',
            vertical: false,
            pack: 'center',
          },
          xtype: 'toolbar',
          itemId: 'buttonToolbar',
          docked: 'bottom',
          defaultType: 'button',
          weighted: true,
          ui: 'footer',
          defaultButtonUI: null,
        },
        standardButtons: {
          ok: {
            text: 'OK',
            weight: 10,
          },
          abort: {
            text: 'Abort',
            weight: 20,
          },
          retry: {
            text: 'Retry',
            weight: 30,
          },
          ignore: {
            text: 'Ignore',
            weight: 40,
          },
          yes: {
            text: 'Yes',
            weight: 50,
          },
          no: {
            text: 'No',
            weight: 60,
          },
          cancel: {
            text: 'Cancel',
            weight: 70,
          },
          apply: {
            text: 'Apply',
            weight: 80,
          },
          save: {
            text: 'Save',
            weight: 90,
          },
          submit: {
            text: 'Submit',
            weight: 100,
          },
          help: {
            text: 'Help',
            weight: 110,
          },
          close: {
            text: 'Close',
            weight: 120,
          },
        },
        defaultToolWeights: {
          toggle: 10,
          gear: 20,
          prev: 30,
          next: 40,
          left: 50,
          right: 60,
          down: 70,
          up: 80,
          refresh: 90,
          disclosure: 100,
          plus: 100,
          minus: 110,
          search: 120,
          edit: 125,
          save: 130,
          print: 140,
          expand: 150,
          collapse: 160,
          help: 170,
          pin: 180,
          unpin: 190,
          minimize: 200,
          maximize: 210,
          restore: 220,
          close: 230,
          trash: 240,
        },
        toolDefaults: {
          xtype: 'tool',
          zone: 'end',
        },
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        fullscreen: true,
        xtype: 'todo',
        $initParent: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
        controller: 'todoController',
        layout: 'hbox',
        headerPosition: 'top',
        icon: null,
        iconCls: null,
        iconAlign: null,
        title: null,
        titleAlign: null,
        anchor: null,
        anchorPosition: null,
        closable: null,
        bbar: null,
        lbar: null,
        rbar: null,
        tbar: null,
        border: false,
        bodyBorder: null,
        bodyPadding: null,
        bodyStyle: null,
        closeAction: 'destroy',
        closeToolText: 'Close panel',
        buttonAlign: 'right',
        buttonDefaults: null,
        buttons: null,
        minButtonWidth: 75,
        resizable: null,
        activeItemIndex: null,
        autoSize: null,
        bodyCls: null,
        control: null,
        defaults: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        data: null,
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minWidth: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        scrollable: null,
        docked: null,
        centered: null,
        padding: null,
        tabIndex: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        width: null,
        height: null,
        hidden: null,
        disabled: null,
        cls: null,
        margin: null,
        style: null,
        touchAction: null,
        bind: null,
        defaultListenerScope: false,
        publishes: null,
        session: null,
        twoWayBindable: null,
        viewModel: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        flex: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      fullscreen: true,
      xtype: 'todo',
      controller: {
        type: 'todoController',
      },
      _controller: {
        type: 'todoController',
      },
      $delegatedEvents: {},
      $links: {
        layout: true,
      },
      layout: {
        container: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
        type: 'hbox',
      },
      _layout: {
        container: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
        type: 'hbox',
      },
      allowHeader: true,
      _isCreatingHeader: false,
      inheritedStateInner: {
        defaultListenerScope: {
          type: 'todoController',
        },
        referenceHolder: {
          type: 'todoController',
        },
        referencePath: '',
        controller: {
          type: 'todoController',
        },
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        nameHolder: {},
      },
      header: {
        xtype: 'panelheader',
        instanceCls: null,
        docked: 'top',
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
        cls: 'todoHeader',
        title: 'Todos',
      },
      $inheritUiCount: 1,
      _header: {
        xtype: 'panelheader',
        instanceCls: null,
        docked: 'top',
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
        cls: 'todoHeader',
        title: 'Todos',
      },
      _headerPosition: 'top',
      $hasCachedDefaultItemClass: true,
      refs: {
        rfTodoList: {
          xtype: 'todoList',
          reference: 'rfTodoList',
          minWidth: 300,
          flex: 1,
          cls: 'todolist-resizer',
          resizable: {
            split: true,
            edges: 'east',
          },
          listeners: {
            loadDetails: 'loadTodoDetails',
            addTodo: 'onAddTodo',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
        rfTodoDetails: {
          xtype: 'todoDetail',
          reference: 'rfTodoDetails',
          columnResize: false,
          flex: 3,
          listeners: {
            operationPerformed: 'onOperationPerformed',
          },
          $initParent: {
            fullscreen: true,
            xtype: 'todo',
            $initParent: '[[ Object ]]',
          },
        },
      },
      _activeItem: {
        xtype: 'todoList',
        reference: 'rfTodoList',
        minWidth: 300,
        flex: 1,
        cls: 'todolist-resizer',
        resizable: {
          split: true,
          edges: 'east',
        },
        listeners: {
          loadDetails: 'loadTodoDetails',
          addTodo: 'onAddTodo',
        },
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
      },
      _activeItemIndex: 0,
      pendingActiveItem: {
        xtype: 'todoList',
        reference: 'rfTodoList',
        minWidth: 300,
        flex: 1,
        cls: 'todolist-resizer',
        resizable: {
          split: true,
          edges: 'east',
        },
        listeners: {
          loadDetails: 'loadTodoDetails',
          addTodo: 'onAddTodo',
        },
        $initParent: {
          fullscreen: true,
          xtype: 'todo',
          $initParent: '[[ Object ]]',
        },
      },
      _toolDefaults: {
        xtype: 'tool',
        zone: 'end',
      },
      _standardButtons: {
        ok: {
          text: 'OK',
          weight: 10,
        },
        abort: {
          text: 'Abort',
          weight: 20,
        },
        retry: {
          text: 'Retry',
          weight: 30,
        },
        ignore: {
          text: 'Ignore',
          weight: 40,
        },
        yes: {
          text: 'Yes',
          weight: 50,
        },
        no: {
          text: 'No',
          weight: 60,
        },
        cancel: {
          text: 'Cancel',
          weight: 70,
        },
        apply: {
          text: 'Apply',
          weight: 80,
        },
        save: {
          text: 'Save',
          weight: 90,
        },
        submit: {
          text: 'Submit',
          weight: 100,
        },
        help: {
          text: 'Help',
          weight: 110,
        },
        close: {
          text: 'Close',
          weight: 120,
        },
      },
      _buttonAlign: 'right',
      _itemId: 'ext-todo-1',
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      reference: null,
      initialized: true,
      _top: 0,
      positioned: true,
      _autoSize: true,
      isInner: false,
      _zIndex: 2,
      _right: 0,
      _bottom: 0,
      _left: 0,
      parent: {
        xtype: 'container',
        reference: 'rfMainView',
        defaults: {
          fullscreen: true,
        },
        flex: 1,
        $initParent: {
          $initParent: '[[ Object ]]',
        },
      },
      isDetached: false,
      rendered: true,
      initBindable: '[[ Function ]]',
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      onRender: null,
      inheritedState: {
        defaultListenerScope: {
          type: 'todoController',
        },
        referenceHolder: {
          type: 'todoController',
        },
        referencePath: '',
        controller: {
          type: 'todoController',
        },
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        nameHolder: {},
      },
      focusEnterEvent: null,
      containsFocus: false,
      filePath:
        '<a target="_blank" href="http://localhost/todoApp/app/view/desktop/todo/Todo.js"></a>',
    },
    {
      name: 'container',
      className: 'Ext.Container',
      isExtComponent: false,
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [],
      lastSize: {},
      onInitializedListeners: [],
      initialConfig: {
        xtype: 'container',
        reference: 'rfMainView',
        defaults: {
          fullscreen: true,
        },
        flex: 1,
        $initParent: {
          $initParent: {},
        },
      },
      $iid: 12,
      baseCls: 'x-container',
      autoGenId: true,
      id: 'ext-container-1',
      getId: 'ext-container-1',
      referenceList: ['element', 'bodyElement'],
      $observableInitialized: true,
      hasListeners: {
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        addtodo: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        tap: 2,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {},
      events: {},
      isFirstInstance: true,
      config: {
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        xtype: 'container',
        reference: 'rfMainView',
        defaults: {
          fullscreen: true,
        },
        flex: 1,
        $initParent: {
          $initParent: {},
        },
        activeItemIndex: null,
        autoSize: null,
        bodyCls: null,
        layout: 'auto',
        control: null,
        items: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        data: null,
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minWidth: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        scrollable: null,
        docked: null,
        centered: null,
        padding: null,
        tabIndex: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        width: null,
        height: null,
        hidden: null,
        disabled: null,
        cls: null,
        margin: null,
        style: null,
        border: null,
        touchAction: null,
        bind: null,
        controller: null,
        defaultListenerScope: false,
        publishes: null,
        session: null,
        twoWayBindable: null,
        viewModel: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      xtype: 'container',
      reference: 'rfMainView',
      _defaults: {
        fullscreen: true,
      },
      _flex: 1,
      $links: {
        layout: true,
      },
      layout: {
        container: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _layout: {
        container: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: '[[ Object ]]',
        },
        type: 'auto',
      },
      _activeItem: 0,
      _activeItemIndex: -1,
      _itemId: 'ext-container-1',
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      initialized: true,
      $delegatedEvents: {},
      parent: {
        $initParent: {},
      },
      isDetached: false,
      rendered: true,
      initBindable: '[[ Function ]]',
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      onRender: null,
      inheritedState: {
        defaultListenerScope: {
          type: 'mainDesktopController',
        },
        referenceHolder: {
          type: 'mainDesktopController',
        },
        referencePath: '',
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        controller: {
          type: 'mainDesktopController',
        },
        nameHolder: {},
      },
      inheritedStateInner: {
        defaultListenerScope: {
          type: 'mainDesktopController',
        },
        referenceHolder: {
          type: 'mainDesktopController',
        },
        referencePath: '',
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        controller: {
          type: 'mainDesktopController',
        },
        nameHolder: {},
      },
      referenceKey: 'rfMainView',
      viewModelKey: 'rfMainView',
      $hasCachedDefaultItemClass: true,
      focusEnterEvent: null,
      containsFocus: false,
    },
    {
      name: 'mainDesktop',
      className: 'myApp.view.desktop.Main',
      isExtComponent: false,
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [
        {
          xtype: 'navview',
          reference: 'rfNavMenu',
          maxWidth: 45,
          padding: 0,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
        {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
      ],
      lastSize: {},
      onInitializedListeners: [],
      initialConfig: {
        $initParent: {},
      },
      $iid: 4,
      baseCls: 'x-panel',
      referenceHolder: true,
      autoGenId: true,
      id: 'ext-mainDesktop-1',
      getId: 'ext-mainDesktop-1',
      referenceList: ['element', 'bodyWrapElement', 'bodyElement'],
      $observableInitialized: true,
      hasListeners: {
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        addtodo: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        tap: 2,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {
        topchange: 'beforetopchange',
        hiddenchange: 'beforehiddenchange',
        rightchange: 'beforerightchange',
        bottomchange: 'beforebottomchange',
        leftchange: 'beforeleftchange',
      },
      events: {},
      isFirstInstance: true,
      config: {
        items: [
          {
            xtype: 'navview',
            reference: 'rfNavMenu',
            maxWidth: 45,
            padding: 0,
            $initParent: {
              $initParent: '[[ Object ]]',
            },
          },
          {
            xtype: 'container',
            reference: 'rfMainView',
            defaults: {
              fullscreen: true,
            },
            flex: 1,
            $initParent: {
              $initParent: '[[ Object ]]',
            },
          },
        ],
        buttonToolbar: {
          layout: {
            type: 'box',
            vertical: false,
            pack: 'center',
          },
          xtype: 'toolbar',
          itemId: 'buttonToolbar',
          docked: 'bottom',
          defaultType: 'button',
          weighted: true,
          ui: 'footer',
          defaultButtonUI: null,
        },
        standardButtons: {
          ok: {
            text: 'OK',
            weight: 10,
          },
          abort: {
            text: 'Abort',
            weight: 20,
          },
          retry: {
            text: 'Retry',
            weight: 30,
          },
          ignore: {
            text: 'Ignore',
            weight: 40,
          },
          yes: {
            text: 'Yes',
            weight: 50,
          },
          no: {
            text: 'No',
            weight: 60,
          },
          cancel: {
            text: 'Cancel',
            weight: 70,
          },
          apply: {
            text: 'Apply',
            weight: 80,
          },
          save: {
            text: 'Save',
            weight: 90,
          },
          submit: {
            text: 'Submit',
            weight: 100,
          },
          help: {
            text: 'Help',
            weight: 110,
          },
          close: {
            text: 'Close',
            weight: 120,
          },
        },
        defaultToolWeights: {
          toggle: 10,
          gear: 20,
          prev: 30,
          next: 40,
          left: 50,
          right: 60,
          down: 70,
          up: 80,
          refresh: 90,
          disclosure: 100,
          plus: 100,
          minus: 110,
          search: 120,
          edit: 125,
          save: 130,
          print: 140,
          expand: 150,
          collapse: 160,
          help: 170,
          pin: 180,
          unpin: 190,
          minimize: 200,
          maximize: 210,
          restore: 220,
          close: 230,
          trash: 240,
        },
        toolDefaults: {
          xtype: 'tool',
          zone: 'end',
        },
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        $initParent: {},
        controller: 'mainDesktopController',
        viewModel: 'mainDesktopVM',
        layout: 'hbox',
        headerPosition: 'top',
        header: null,
        icon: null,
        iconCls: null,
        iconAlign: null,
        title: null,
        titleAlign: null,
        anchor: null,
        anchorPosition: null,
        closable: null,
        bbar: null,
        lbar: null,
        rbar: null,
        tbar: null,
        border: false,
        bodyBorder: null,
        bodyPadding: null,
        bodyStyle: null,
        closeAction: 'destroy',
        closeToolText: 'Close panel',
        buttonAlign: 'right',
        buttonDefaults: null,
        buttons: null,
        minButtonWidth: 75,
        tools: null,
        resizable: null,
        activeItemIndex: null,
        autoSize: null,
        bodyCls: null,
        control: null,
        defaults: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        data: null,
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minWidth: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        scrollable: null,
        docked: null,
        centered: null,
        padding: null,
        tabIndex: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        width: null,
        height: null,
        hidden: null,
        disabled: null,
        cls: null,
        margin: null,
        style: null,
        touchAction: null,
        bind: null,
        defaultListenerScope: false,
        publishes: null,
        session: null,
        twoWayBindable: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        flex: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      controller: {
        type: 'mainDesktopController',
      },
      _controller: {
        type: 'mainDesktopController',
      },
      $delegatedEvents: {},
      $links: {
        layout: true,
      },
      layout: {
        container: {
          $initParent: '[[ Object ]]',
        },
        type: 'hbox',
      },
      _layout: {
        container: {
          $initParent: '[[ Object ]]',
        },
        type: 'hbox',
      },
      $hasCachedDefaultItemClass: true,
      _activeItem: {
        xtype: 'navview',
        reference: 'rfNavMenu',
        maxWidth: 45,
        padding: 0,
        $initParent: {
          $initParent: '[[ Object ]]',
        },
      },
      _activeItemIndex: 0,
      pendingActiveItem: {
        xtype: 'navview',
        reference: 'rfNavMenu',
        maxWidth: 45,
        padding: 0,
        $initParent: {
          $initParent: '[[ Object ]]',
        },
      },
      _headerPosition: 'top',
      _standardButtons: {
        ok: {
          text: 'OK',
          weight: 10,
        },
        abort: {
          text: 'Abort',
          weight: 20,
        },
        retry: {
          text: 'Retry',
          weight: 30,
        },
        ignore: {
          text: 'Ignore',
          weight: 40,
        },
        yes: {
          text: 'Yes',
          weight: 50,
        },
        no: {
          text: 'No',
          weight: 60,
        },
        cancel: {
          text: 'Cancel',
          weight: 70,
        },
        apply: {
          text: 'Apply',
          weight: 80,
        },
        save: {
          text: 'Save',
          weight: 90,
        },
        submit: {
          text: 'Submit',
          weight: 100,
        },
        help: {
          text: 'Help',
          weight: 110,
        },
        close: {
          text: 'Close',
          weight: 120,
        },
      },
      _toolDefaults: {
        xtype: 'tool',
        zone: 'end',
      },
      _buttonAlign: 'right',
      _itemId: 'ext-mainDesktop-1',
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      reference: null,
      initialized: true,
      _top: 0,
      positioned: true,
      _autoSize: true,
      isInner: false,
      _hidden: false,
      _zIndex: 0,
      inheritedStateInner: {
        defaultListenerScope: {
          type: 'mainDesktopController',
        },
        referenceHolder: {
          type: 'mainDesktopController',
        },
        referencePath: '',
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        controller: {
          type: 'mainDesktopController',
        },
        nameHolder: {},
      },
      _right: 0,
      _bottom: 0,
      _left: 0,
      parent: {},
      isDetached: false,
      rendered: true,
      initBindable: '[[ Function ]]',
      inheritedState: {
        defaultListenerScope: {
          type: 'mainDesktopController',
        },
        referenceHolder: {
          type: 'mainDesktopController',
        },
        referencePath: '',
        viewModelPath: '',
        viewModel: {
          data: {
            name: 'LocalTodo',
          },
          formulas: null,
        },
        controller: {
          type: 'mainDesktopController',
        },
        nameHolder: {},
      },
      _viewModel: {
        data: {
          name: 'LocalTodo',
        },
        formulas: null,
      },
      hasVM: true,
      viewModel: {
        data: {
          name: 'LocalTodo',
        },
        formulas: null,
      },
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      onRender: null,
      refs: {
        rfNavMenu: {
          xtype: 'navview',
          reference: 'rfNavMenu',
          maxWidth: 45,
          padding: 0,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
        rfMainView: {
          xtype: 'container',
          reference: 'rfMainView',
          defaults: {
            fullscreen: true,
          },
          flex: 1,
          $initParent: {
            $initParent: '[[ Object ]]',
          },
        },
      },
      nameRefs: null,
      focusEnterEvent: null,
      containsFocus: false,
      filePath:
        '<a target="_blank" href="http://localhost/todoApp/app/view/desktop/Main.js"></a>',
    },
    {
      name: 'viewport',
      className: 'Ext.viewport.Default',
      isExtComponent: false,
      doPreventPanning: '[[ Function ]]',
      doPreventZooming: '[[ Function ]]',
      maximizeOnEvents: ['ready', 'orientationchange'],
      items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      _items: {
        allowFunctions: false,
        getKey: '[[ Function ]]',
      },
      innerItems: [],
      lastSize: {
        width: 1366,
        height: 619,
      },
      onInitializedListeners: [],
      $iid: 2,
      baseCls: 'x-viewport',
      getId: 'ext-viewport',
      referenceList: ['element', 'orientationElement', 'bodyElement'],
      $observableInitialized: true,
      hasListeners: {
        activeitemchange: 1,
        viewload: 1,
        initialize: 2,
        refreshlist: 1,
        operationperformed: 1,
        loaddetail: 1,
        addtodo: 1,
        loaddate: 1,
        flexchange: 18,
        beforecenteredchange: 26,
        positionedchange: 26,
        afterdockedchange: 26,
        tap: 2,
        triggertap: 2,
        columnresize: 1,
        show: 2,
        hide: 2,
        sort: 1,
        add: 1,
        move: 1,
        remove: 1,
        _decr_: '[[ Function ]]',
        _incr_: '[[ Function ]]',
      },
      eventedBeforeEventNames: {},
      events: {},
      initialConfig: {},
      isFirstInstance: true,
      config: {
        menus: {},
        eventHandlers: {
          focus: 'handleFocusEvent',
          blur: 'handleBlurEvent',
        },
        autoMaximize: false,
        autoBlurInput: true,
        preventZooming: false,
        autoRender: true,
        layout: 'card',
        width: '100%',
        height: '100%',
        orientation: null,
        swipeThreshold: 30,
        activeItemIndex: null,
        autoSize: null,
        bodyCls: null,
        control: null,
        defaults: null,
        items: null,
        autoDestroy: true,
        defaultType: null,
        defaultFocus: null,
        innerCls: null,
        masked: null,
        activeItem: 0,
        displayed: null,
        html: null,
        draggable: null,
        zIndex: null,
        tpl: null,
        enterAnimation: null,
        exitAnimation: null,
        showAnimation: null,
        hideAnimation: null,
        tplWriteMode: 'overwrite',
        data: null,
        contentEl: null,
        record: null,
        tooltip: null,
        axisLock: null,
        modal: null,
        hideOnMaskTap: null,
        weight: null,
        userSelectable: null,
        left: null,
        top: null,
        right: null,
        bottom: null,
        minWidth: null,
        minHeight: null,
        maxWidth: null,
        maxHeight: null,
        scrollable: null,
        docked: null,
        centered: null,
        padding: null,
        tabIndex: null,
        stateful: null,
        statefulDefaults: null,
        stateId: null,
        renderTo: null,
        ui: null,
        userCls: null,
        ripple: null,
        hideMode: null,
        instanceCls: null,
        hidden: null,
        disabled: null,
        cls: null,
        margin: null,
        style: null,
        border: null,
        touchAction: null,
        bind: null,
        controller: null,
        defaultListenerScope: false,
        publishes: null,
        session: null,
        twoWayBindable: null,
        viewModel: null,
        plugins: null,
        keyMap: null,
        keyMapEnabled: null,
        ariaAttributes: null,
        flex: null,
        floated: null,
        relative: null,
        x: null,
        y: null,
        shadow: null,
        shim: null,
        alwaysOnTop: null,
        toFrontOnShow: true,
        translatable: null,
        constrainAlign: null,
        alignSelf: null,
      },
      _autoMaximize: false,
      _preventZooming: false,
      $links: {
        layout: true,
      },
      layout: {
        container: {},
        type: 'card',
      },
      _layout: {
        container: {},
        type: 'card',
      },
      _width: '100%',
      _height: '100%',
      _menus: {},
      _activeItem: 0,
      _activeItemIndex: -1,
      _itemId: 'ext-viewport',
      currentUiCls: {},
      refreshPositioned: '[[ Function ]]',
      reference: null,
      initialized: true,
      $delegatedEvents: {},
      windowOuterHeight: 728,
      stretchHeights: {},
      managedListeners: [
        {
          item: {},
          ename: 'resize',
          fn: 'onWindowResize',
          scope: {},
          options: {
            priority: 1000,
          },
        },
      ],
      nameRefs: {
        topping: [
          {
            xtype: 'checkboxfield',
            name: 'topping',
            bind: {
              checked: '{IsCompleted}',
              tooltip:
                '{IsCompleted ? "Mark as Not Complete" : "Mark as Complete"}',
            },
            listeners: {
              change: 'actionCheckChange',
            },
            $initParent: '[[ Object ]]',
          },
        ],
      },
      refs: null,
      inheritedState: {
        nameHolder: {},
      },
      inheritedStateInner: {
        nameHolder: {},
      },
      isReady: true,
      rendered: true,
      initBindable: '[[ Function ]]',
      _keyMapReady: true,
      _keyMapEnabled: true,
      _keyMapListener: null,
      onRender: null,
      _orientation: 'landscape',
      focusEnterEvent: null,
      containsFocus: false,
    },
  ],
});
